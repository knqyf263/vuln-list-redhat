{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "OpenShift Enterprise 1",
      "fix_state": "Not affected",
      "package_name": "ruby193-rubygem-activerecord",
      "cpe": "cpe:/a:redhat:openshift:1"
    },
    {
      "product_name": "OpenShift Enterprise 1",
      "fix_state": "Not affected",
      "package_name": "rubygem-activerecord",
      "cpe": "cpe:/a:redhat:openshift:1"
    },
    {
      "product_name": "Red Hat CloudForms Tools 1",
      "fix_state": "Not affected",
      "package_name": "rubygem-activerecord",
      "cpe": "cpe:/a:cloudforms_tools:1"
    },
    {
      "product_name": "Red Hat Subscription Asset Manager",
      "fix_state": "Not affected",
      "package_name": "rubygem-activerecord",
      "cpe": "cpe:/a:rhel_sam:1"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2013-02-07T00:00:00Z",
  "bugzilla": {
    "description": "CVE-2013-3221 rubygem-activerecord: Data-type injection attacks due absent database column data type (input vs stored value) check",
    "id": "954365",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=954365"
  },
  "cvss": {
    "cvss_base_score": "5.0",
    "cvss_scoring_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
    "status": "draft"
  },
  "cvss3": {
    "cvss3_base_score": "",
    "cvss3_scoring_vector": "",
    "status": ""
  },
  "iava": "",
  "cwe": "",
  "statement": "Not a security issue.  This issue is due to the handling of data types when passing data between rubygem-activerecord and MySQL.  Applications that use rubygem-activerecord and MySQL may be affected if written in a way that exposes the issue, however any flaw would be specific to that application. For further information, please refer to https://bugzilla.redhat.com/show_bug.cgi?id=954365#c5",
  "acknowledgement": "",
  "name": "CVE-2013-3221",
  "document_distribution": "",
  "details": [
    "The Active Record component in Ruby on Rails 2.3.x, 3.0.x, 3.1.x, and 3.2.x does not ensure that the declared data type of a database column is used during comparisons of input values to stored values in that column, which makes it easier for remote attackers to conduct data-type injection attacks against Ruby on Rails applications via a crafted value, as demonstrated by unintended interaction between the \"typed XML\" feature and a MySQL database."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2013-3221\nhttps://nvd.nist.gov/vuln/detail/CVE-2013-3221"
  ]
}